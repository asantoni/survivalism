/* Box Placer gun for Minecraft-style box placing. */
// Originally by Hax Murderer
// Rewritten from scratch by Mr_Xerxes (thanks man!)

Actor BoxPlacerMode : Inventory {
   Inventory.MaxAmount 4         //Number of boxes (not the max possible value)
}

Actor DoomZBoxPlacer : DoomWeapon 15006 {
   Tag "Box Placer"
   Health 10
   Inventory.PickupMessage "You found a box placer!"
   Weapon.SelectionOrder 255
   Weapon.SlotNumber 0
   Weapon.SlotPriority 2

   +WEAPON.NOAUTOFIRE
   +WEAPON.NOALERT
   +WEAPON.WIMPY_WEAPON
   +WEAPON.NO_AUTO_SWITCH
   +WEAPON.NOAUTOAIM
   +SHOOTABLE
   +NOBLOOD
   +WINDTHRUST

   States {
      Spawn:
         FGRN A 31500   //Disappear after 15 minutes
         Stop
      Select:
         FLAR A 1 A_Raise
         Loop
      Deselect:
         FLAR A 1 A_Lower
         Loop
      Ready:
         FLAR A 1 A_WeaponReady
         Loop
      Fire:
         FFIR A 0 A_JumpIfInventory("BoxPlacerMode", 3, "Fire.Glass")
         FFIR A 0 A_JumpIfInventory("BoxPlacerMode", 2, "Fire.Steel")
         FFIR A 0 A_JumpIfInventory("BoxPlacerMode", 1, "Fire.Stone")
      Fire.Wood:
         FFIR A 0 A_JumpIfInventory("CBoxItem",1,3)
         FFIR A 0 A_Print("You need wood in your inventory first.")
         FFIR A 0 A_Jump(256,"Ready")
         FFIR A 0 A_Refire   //Jump to "Hold" State if button isn't released
         FFIR A 10 A_FireCustomMissile("BoxPlacerWoodMissile",0,0,0,0, 0, 0)
         Goto Ready
      Fire.Stone:
         FFIR A 0 A_JumpIfInventory("CStoneBoxItem",1,3)
         FFIR A 0 A_Print("You need stone in your inventory first.")
         FFIR A 0 A_Jump(256,"Ready")
         FFIR A 0 A_Refire
         FFIR A 10 A_FireCustomMissile("BoxPlacerStoneMissile",0,0,0,0)
         Goto Ready
      Fire.Steel:
         FFIR A 0 A_JumpIfInventory("CSteelBoxItem",1,3)
         FFIR A 0 A_Print("You need steel in your inventory first.")
         FFIR A 0 A_Jump(256,"Ready")
         FFIR A 0 A_Refire
         FFIR A 10 A_FireCustomMissile("BoxPlacerSteelMissile",0,0,0,0)
         Goto Ready
      Fire.Glass:
         FFIR A 0 A_JumpIfInventory("CGlassBoxItem",1,3)
         FFIR A 0 A_Print("You need glass in your inventory first.")
         FFIR A 0 A_Jump(256,"Ready")
         FFIR A 0 A_Refire
         FFIR A 10 A_FireCustomMissile("BoxPlacerGlassMissile",0,0,0,0)
         Goto Ready
      Hold:
         FLAR B 0 A_JumpIfInventory("BoxPlacerMode",1,4)
         FLAR B 4 A_FireCustomMissile("BoxPlacerWoodGhost",0,0,0,0, 0, 0)
         FLAR B 0 A_Refire
         FLAR B 0 A_Jump(256,"Fire")
         FLAR B 0 A_JumpIfInventory("BoxPlacerMode",2,4)
         FLAR B 4 A_FireCustomMissile("BoxPlacerStoneGhost",0,0,0,0)
         FLAR B 0 A_Refire
         FLAR B 0 A_Jump(256,"Fire")
         FLAR B 0 A_JumpIfInventory("BoxPlacerMode",3,4)
         FLAR B 4 A_FireCustomMissile("BoxPlacerSteelGhost",0,0,0,0)
         FLAR B 0 A_Refire
         FLAR B 0 A_Jump(256,"Fire")
         //FLAR B 0 A_JumpIfInventory("BoxPlacerMode",4,4)
         FLAR B 4 A_FireCustomMissile("BoxPlacerGlassGhost",0,0,0,0)
         FLAR B 0 A_Refire
         FLAR B 0 A_Jump(256,"Fire")
         Goto Ready
      AltFire:
         FLAR C 5 A_GiveInventory("BoxPlacerMode",1)
         FLAR C 5 A_JumpIfInventory("BoxPlacerMode",1,3)
         FLAR C 5 A_Print("Mode: Wooden Box")
         FLAR C 5 A_Jump(256,"Ready")
         FLAR C 5 A_JumpIfInventory("BoxPlacerMode",2,3)
         FLAR C 5 A_Print("Mode: Stone Box")
         FLAR C 5 A_Jump(256,"Ready")
         FLAR C 5 A_JumpIfInventory("BoxPlacerMode",3,3)
         FLAR C 5 A_Print("Mode: Steel Box")
         FLAR C 5 A_Jump(256,"Ready")
         FLAR C 5 A_JumpIfInventory("BoxPlacerMode",4,3)
         FLAR C 5 A_Print("Mode: Glass Box")
         FLAR C 5 A_Jump(256,"Ready")
         FLAR C 5 A_TakeInventory("BoxPlacerMode",0x7FFFFFFF)
         Goto AltFire+1
   }
}

// --- Ghost Missiles

Actor BoxPlacerWoodGhost {
   Speed 50
   Projectile
   +CANPASS     //Allows the
   +SHOOTABLE
   +NOBLOCKMAP //"Nothing else can run into a NOBLOCKMAP object but the object itself can run into others"
   +TOUCHY
   //-NOGRAVITY
   BounceType Heretic
   BounceFactor 0.01
   WallBounceFactor 0.01
   BounceCount 0  //Die if we land on top of an existing CBox

   +USEBOUNCESTATE
   +ALLOWBOUNCEONACTORS
   +BOUNCEONACTORS
   //-DONTBOUNCEONSHOOTABLES - Zandronum 4.0?
   Gravity 4.0
   Mass 10
   Height 2 //26 //CBox height - 12
   Radius 2 //12 //CBox radius - 12

    Scale 0.1

   States {
      Spawn:
         TNT1 A 4   //Max distance determined by: (Speed)*(this duration)
         Stop
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CBoxGhost", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         //-z%38+((z%38)>19)*76-((z%38)<-19)*38
         Stop
   }
}

Actor BoxPlacerStoneGhost : BoxPlacerWoodGhost {
   States {
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CStoneBoxGhost", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         Stop
   }
}

Actor BoxPlacerSteelGhost : BoxPlacerWoodGhost {
   States {
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CSteelBoxGhost", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         Stop
   }
}

Actor BoxPlacerGlassGhost : BoxPlacerWoodGhost {
   States {
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CGlassBoxGhost", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         Stop
   }
}

// --- Box Missiles

Actor BoxPlacerWoodMissile : BoxPlacerWoodGhost {
   States {
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CBox", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         //-z%38+((z%38)>19)*76-((z%38)<-19)*38
         TNT1 A 0 A_TakeFromTarget("CBoxItem",1)
         Stop
   }
}

Actor BoxPlacerStoneMissile : BoxPlacerWoodGhost {
   States {
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CStoneBox", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         TNT1 A 0 A_TakeFromTarget("CStoneBoxItem",1)
         Stop
   }
}

Actor BoxPlacerSteelMissile : BoxPlacerWoodGhost {
   States {
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CSteelBox", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         TNT1 A 0 A_TakeFromTarget("CSteelBoxItem",1)
         Stop
   }
}

Actor BoxPlacerGlassMissile : BoxPlacerWoodGhost {
   States {
      Bounce:
      Death:
      Crash:
         TNT1 A 0 A_SpawnItemEx("CGlassBox", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 0.0, 0.0, 0.0, 0.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE)
         TNT1 A 0 A_TakeFromTarget("CGlassBoxItem",1)
         Stop
   }
}
