

actor TorchItem : CustomInventory
{
	Health 10
	+SHOOTABLE
	+NOBLOOD
    +WINDTHRUST
	Tag "Torch"
	//+CANPASS //---> crazy CPU usage
	Inventory.PickupMessage "Picked up a torch!"
	Inventory.UseSound "misc/invuse"
	+INVENTORY.INVBAR
	Inventory.Icon "TRCHA0" //"PISTI0"
	Inventory.MaxAmount 50
	//+COUNTITEM
	+INVENTORY.PICKUPFLASH
	
	States
	{
		Spawn:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TRCH G -1
			Stop
		Use:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 0 A_SpawnItemEx("Torch", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
								64.0, 0.0, 32.0, 
								0.0, 0.0, 0.0, //velocity 
								0.0, //angle
								0) //flags
		Stop
	}
}

actor Torch : ShortRedTorch
{
	Health 10
	-NOGRAVITY
	+SHOOTABLE
	+NOBLOOD
	+SOLID
	+FLOORCLIP
	+STANDSTILL
	+CANPASS //---> crazy CPU usage
	+ISMONSTER //Needed for SXF_SETMASTER
	+FRIENDLY
	+CANTSEEK
	+NOTARGET
	-COUNTKILL
	//+DORMANT
	Damage 0
	DamageFactor "SentryTurret", 0.0

	States
	{
		//Pain:
		//	TNT1 A 0
		//	TNT1 A 0 A_Jump(256, "Spawn")
		Spawn:
			TNT1 A 0 
			TNT1 A 0 A_SpawnItemEx("MonsterSpawnerRepeller", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0)
		Illuminate:
			SMRT ABCD 4 Bright
			Loop
		Death:
		XDeath:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 1 A_KillChildren
			TNT1 A 1 A_RemoveChildren(true)
			TNT1 A 0 A_SpawnItemEx("TorchItem", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
							   0.0, 0.0, 32.0, 
							   0.0, 0.0, 6.0, //velocity 
							   0.0, //angle
							   0) //flags
			Stop
	}
}

actor WaterfallSprayer 10300
{
	+CLIENTSIDEONLY
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("waterfall", CHAN_BODY, 1.0, true, 0.5)
		Spray:
			TNT1 A 16 A_SpawnItemEx("WaterfallSpray", 0, 0, 16.0, random(-2.0, 2.0), random(-2.0, 2.0), 16.0, 0, SXF_NOCHECKPOSITION, 32)
			Loop
	}
}

actor WaterfallSpray
{
	RenderStyle "Add"
	Scale 4.0
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD 
	+DONTSPLASH

	States
	{
		Spawn:
			TNT1 A 0
			WTFL A 4 A_FadeOut(0.1) //Actor will be removed automatically when it fades to 0
			loop	
	}
}


actor RapidsSprayer 10302
{
	+CLIENTSIDEONLY
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_PlaySoundEx("waterstream", CHAN_BODY, true, 0.5)
			//TNT1 A 0 A_PlaySound("waterfall", CHAN_BODY, 1.0, true, 0.5)
		Procrastinate:
			TNT1 A 0
			TNT1 A 4 A_Jump(128, "Spray")
			loop
		Spray:
			TNT1 A 16 A_SpawnItemEx("RapidsSpray", 0, 0, 16.0, random(-2.0, 2.0), random(-2.0, 2.0), 4.0, 0, SXF_NOCHECKPOSITION, 32)
			goto Procrastinate
	}
}

actor RapidsSpray : WaterfallSpray
{
	+DONTSPLASH
	Scale 1.0
}

actor WaterfallSprayer2 10303
{
	RenderStyle "Translucent"

	+CLIENTSIDEONLY
	+NOGRAVITY
	+NOBLOCKMAP
	Alpha 0.2
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("waterfall", CHAN_BODY, 1.0, true, 0.5)
		Spray:
			TNT1 A 0 A_Jump(256, "Spray1", "Spray2", "Spray3")
		Spray1:
			TNT1 A 9 A_SpawnItemEx("WaterfallSpray2", random(-32.0, 32.0), random(-32.0, 0), -932.0, random(-2.0, 2.0), 0.0, random(-8.0, -4.0), 0, SXF_NOCHECKPOSITION, 0)
			goto Spray
		Spray2:
			TNT1 A 9 A_SpawnItemEx("WaterfallSpray3", random(-32.0, 32.0), random(-32.0, 0), -932.0, random(-2.0, 2.0), 0.0, random(-8.0, -4.0), 0, SXF_NOCHECKPOSITION, 0)
			goto Spray
		Spray3:
			TNT1 A 9 A_SpawnItemEx("WaterfallSpray4", random(-32.0, 32.0), random(-32.0, 0), -932.0, random(-2.0, 2.0), 0.0, random(-8.0, -4.0), 0, SXF_NOCHECKPOSITION, 0)
			goto Spray
	}
}

// These waterfall spray actors use a model to act like flat (non-billboarded) sprites.
// See MODELDEF and the models/ directory.
actor WaterfallSpray2
{
	RenderStyle "Add"
	Scale 1.0
	+NOBLOCKMAP
	+CLIENTSIDEONLY
	//+FORCEXYBILLBOARD 
	//+FORCEYBILLBOARD 
	//+DONTSPLASH
	
	States
	{
		Spawn:
			TNT1 A 0
			WTFL B 0 A_FadeOut(0.5)
			WTFL BBBB 6 A_FadeIn(0.2)
			goto FadeOutAndDie
		FadeOutAndDie:
			//WTFL B 2 A_FadeOut(0.5) //Actor will be removed automatically when it fades to 0
			WTFL B 1 A_JumpIf (z <= floorz, "Crash")
			loop
		Crash:
			//WTFL B 5
			WTFL B 0
			Stop
	}
}

actor WaterfallSpray3 : WaterfallSpray2
{
	States
	{
		Spawn:
			TNT1 A 0
			WTFL C 0 A_FadeOut(0.8)
			WTFL CCCC 6 A_FadeIn(0.1)
			goto FadeOutAndDie
		FadeOutAndDie:
			WTFL C 10 A_FadeOut(0.1) //Actor will be removed automatically when it fades to 0
			WTFL C 0 A_JumpIf (z <= floorz, "Crash")
			loop
		Crash:
			WTFL C 5
			Stop
	}
}

actor WaterfallSpray4 : WaterfallSpray2
{
	States
	{
		Spawn:
			TNT1 A 0
			WTFL D 0 A_FadeOut(0.8)
			WTFL DDDD 6 A_FadeIn(0.1)
			goto FadeOutAndDie
		FadeOutAndDie:
			WTFL D 10 A_FadeOut(0.1) //Actor will be removed automatically when it fades to 0
			WTFL D 0 A_JumpIf (z <= floorz, "Crash")
			loop
		Crash:
			WTFL D 5
			Stop
	}
}



actor DoomZFogSpawner : FogSpawner 10301
{
	+CLIENTSIDEONLY
	/*
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("waterfall", CHAN_BODY, 1.0, true, 0.5)
		Spray:
			TNT1 A 16 A_SpawnItemEx("WaterfallSpray", 0, 0, 16.0, random(-2.0, 2.0), random(-2.0, 2.0), 16.0, 0, SXF_NOCHECKPOSITION, 32)
			Loop
	}*/
}




actor SpikeItem : CustomInventory
{
	Health 10
	+SHOOTABLE
	+NOBLOOD
    +WINDTHRUST
	Tag "Wooden Spike"
	//+CANPASS //---> crazy CPU usage
	Inventory.PickupMessage "Picked up a spike!"
	Inventory.UseSound "misc/invuse"
	+INVENTORY.INVBAR
	Inventory.Icon "spike" //"PISTI0"
	Inventory.MaxAmount 50
	//+COUNTITEM
	+INVENTORY.PICKUPFLASH
	
	States
	{
		Spawn:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			SPKE A -1
			Stop
		Use:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 0 A_SpawnItemEx("DoomZSpike", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
								64.0, 0.0, 32.0, 
								0.0, 0.0, 0.0, //velocity 
								0.0, //angle
								0) //flags
		Stop
	}
}

actor DoomZSpike : Stalagtite
{
	Monster
	+FRIENDLY
	Health 150
	Mass 0x7FFFFFFF
	-NOGRAVITY
	+SHOOTABLE
	+NOBLOOD
	+SOLID
	+FLOORCLIP
	+STANDSTILL
	//+NOTARGET
	//+NOTRIGGER
	+CANPASS //---> crazy CPU usage
	-COUNTKILL
	+LOOKALLAROUND
	//+DORMANT
	Damage 5
  
	DamageType "NoXP"
	DamageFactor "Axe", 10.0
  
	States
	{
		//Pain:
		//	TNT1 A 0
		//	TNT1 A 0 A_Jump(256, "Spawn")
		Spawn:
			TNT1 A 0 
			TNT1 A 0 ACS_ExecuteAlways(503, 0)
		SpawnLook:
			//SMT2 A 10 A_Look
			SMIT A 10 A_Look
			Loop
		See:
			SMIT A 10 A_Chase
		Melee:
			SMIT A 10 A_CustomMeleeAttack(5, "", "", "NoXP", true)
			goto See
		Death.Axe:
			TNT1 A 0
			TNT1 A 0 A_SpawnItemEx("SpikeItem", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
							   0.0, 0.0, 32.0, 
							   0.0, 0.0, 6.0, //velocity 
							   0.0, //angle
							   0) //flags
			Stop
		Death:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 1 A_KillChildren
			Stop
	}
}

actor WaterAmmo : Ammo
{
	Inventory.PickupMessage "You got some water."
	Inventory.Amount 10
	Inventory.MaxAmount 10
	
	States
	{
		Spawn:
			TNT1 A 0
			Stop
	}
	
}

actor Bucket : Weapon
{
	+WEAPON.NO_AUTO_SWITCH
	+WEAPON.AMMO_OPTIONAL
	//NOAUTOAIM - Zandronum 3.0
	inventory.pickupsound "misc/i_pkup"
	inventory.pickupmessage "You found a water bucket!"
	inventory.icon "BCKTB0"
	Weapon.SelectionOrder 9999
	Weapon.SlotNumber 1
	Weapon.SlotPriority 0.1
	DamageType "Water"
	Tag "Water Bucket"
	
	weapon.ammotype "WaterAmmo"
	weapon.ammogive 0
	weapon.ammouse 1

	states {
		Spawn:
			BCKT B -1 //B is empty bucket
			stop
		Ready:
		Full:
			TNT1 A 0
			TNT1 A 0 A_JumpIfNoAmmo("Empty")
			BCKT D 1 A_WeaponReady
			goto Ready
		Empty:
			BCKT C 1 A_WeaponReady
			goto Ready
		Deselect:
			TNT1 A 0 A_JumpIfNoAmmo("LowerEmpty")
		LowerFull:
			BCKT D 1 A_Lower
			loop
		LowerEmpty:
			BCKT C 1 A_Lower
			loop
		Select:
			TNT1 A 0 A_JumpIfNoAmmo("RaiseEmpty")
		RaiseFull:
			BCKT D 1 A_Raise
			loop
		RaiseEmpty:
			BCKT C 1 A_Raise
			loop
		Fire:
			TNT1 A 0
			TNT1 A 0 A_JumpIfNoAmmo("CheckForWaterAhead")
		SprayWater:
			BCKT D 1 Offset(0, 32)
			BCKT D 1 Offset(0, 22)
			BCKT D 1 Offset(0, 11)
			BCKT D 1 Offset(0, -8)
			//BCKT C 0 A_GunFlash
			BCKT D 5 Offset(0, -8) A_FireCustomMissile("BucketSplash", 0, 1, 0, 16)
			BCKT D 0 A_JumpIfNoAmmo("FinishSprayWaterEmpty")
			BCKT D 3 Offset(0, 16)
			BCKT D 2 Offset(0, 24)
			BCKT D 3 
			BCKT D 2 A_ReFire
			goto Ready
	    //Last half of the above state, but for when your bucket just got emptied
		FinishSprayWaterEmpty: 
			BCKT C 3 Offset(0, 16)
			BCKT C 2 Offset(0, 24)
			BCKT C 3 
			BCKT C 2 A_ReFire
			goto Ready
		CheckForWaterAhead:
			BCKT C 4 A_FireCustomMissile("BucketTracer", 0, 0, 0, 8, 0)
			TNT1 A 0 A_JumpIfNoAmmo("Ready")
			BCKT C 1 Offset(0, 38)
			BCKT C 1 Offset(0, 46)
			BCKT C 1 Offset(0, 53)
			BCKT C 1 Offset(0, 61)
			BCKT C 1 Offset(0, 75)
			BCKT C 1 Offset(0, 95)
			BCKT C 1 Offset(0, 110)
			BCKT C 1 Offset(0, 120)
			BCKT C 1 Offset(0, 128)
			BCKT C 8 Offset(0, 128) A_PlaySound("world/watersplash2")
			BCKT D 1 Offset(0, 122) 
			BCKT D 1 Offset(0, 115) 
			BCKT D 1 Offset(0, 102) 
			BCKT D 1 Offset(0, 96) 
			BCKT D 1 Offset(0, 82) 
			BCKT D 1 Offset(0, 74)
			BCKT D 1 Offset(0, 64)
			BCKT D 1 Offset(0, 56)
			BCKT D 1 Offset(0, 48) 
			BCKT D 1 Offset(0, 42) 
			BCKT D 1 Offset(0, 37)
			BCKT D 1 Offset(0, 32)
			goto Ready

	}
}


actor BucketSplash
{
  DamageType "Water"

  Radius 11
  Height 16
  Speed 20
  Damage 1
  Projectile
  -NOGRAVITY
  +RANDOMIZE
  +FORCEXYBILLBOARD 
  Scale 2.0
  //SeeSound "weapons/rocklf"
  //DeathSound "weapons/rocklx"
  //Obituary "drowned"
  
  //ProjectileKickBack 100 //Zandronum 3.0
  
  States
  {
  Spawn:
    WTRS A 1
    Loop
  Death:
    WTRS A 1 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 8 A_PlaySound("world/watersplash2")
  FadeOut:
    WTRS A 1 A_FadeOut
    Loop
  }
}

actor BucketSplashSecondary : BucketSplash
{
  +CLIENTSIDEONLY
  DamageType None
  Damage 0
  Scale 1.0
  //SeeSound "weapons/rocklf"
  //DeathSound "weapons/rocklx"
  //Obituary "drowned"
  
  //ProjectileKickBack 0
  
  States
  {
  Spawn:
    WTRS A 1
    Loop
  Death:
    WTRS A 2 A_PlaySound("world/lavsiz22")
    WTRS A 2
  FadeOut:
    WTRS A 1 A_FadeOut
    Loop
  }
}

actor BucketTracer
{
	Projectile
	-NOGRAVITY
	-NOBLOCKMAP //Need to be in the blockmap to detect the floor texture 
	-DONTSPLASH
	speed 10

	States
	{
		Spawn:
			TNT1 A 0 ACS_ExecuteAlways(952, 0, AAPTR_TARGET)
			TNT1 AAAA 1 ACS_ExecuteAlways(952, 0, AAPTR_TARGET)
		Death:
		Crash:
		XDeath:
			TNT1 A 0
			//Check if we hit water and give the player water if so.
			TNT1 A 0 ACS_ExecuteAlways(952, 0, AAPTR_TARGET)
			stop
	}
}


actor DoomZHealthBonus : HealthBonus
{
	+SHOOTABLE
	Inventory.Amount 3 //How much health to give
	Health 20
	States
	{
	  Spawn:
		TNT1 A 0
		TNT1 A 0 A_SetArg(1, 536) //21000 / 36  (10 minutes / 36)
		BON1 ABCDCB 6
		TNT1 A 0 A_CountdownArg(1, "Death")
		Loop
	  Death:
		TNT1 A 0
		Stop
	}
}


ACTOR Ankh : CustomInventory
{
  Inventory.Amount 1 
  Inventory.Icon "ARTIALI1"
  Inventory.InterHubAmount 100
  Inventory.MaxAmount 3 
  Inventory.PickupMessage "You found the Ankh Of Life - Use it to defeat death!"
  Inventory.PickupSound "misc/p_pkup"
  Tag "Ankh of Life"
  
  -COUNTITEM
  +FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.PICKUPFLASH
  +INVENTORY.AUTOACTIVATE //Trying it out, simplifies my life
  States
  {
  Spawn:
	AKOL A 0
	AKOL A 327 A_PlaySound("antihunt", CHAN_ITEM, 1.0, false, ATTN_NORM)
	loop
  Use:
	TNT1 A 0 ACS_ExecuteAlways(956, 0, 0) //Kill the Death actor chasing the player
	stop
  //This pickup logic has to use A_JumpIf because it the simpler logic here doesn't work in multiplayer:
  /* Simple logic: - Works perfectly in singleplayer (Zandronum 2.0), but broken in multiplayer
   Pickup:
	AKOL A 0
	AKOL A 0 ACS_ExecuteWithResult(957, 0, 0) //Only allow pickup if the player has DeathCurse
	stop
  */
  //More complicated logic, but works correctly in multiplayer:
  Pickup:
	AKOL A 0
	AKOL A 0 A_JumpIf(ACS_ExecuteWithResult(957, 0, 0), "PickupAndStore") //Only allow pickup if the player has DeathCurse
	stop
  PickupAndStore:
	AKOL A 0 
	AKOL A 0 A_RailWait
	stop
  //End of more complicated but functional logic for multiplayer
  }
}

//Dummy inventory indicating you're cursed.
actor DeathCurse : Inventory
{
	Tag "Death Curse"
	Inventory.MaxAmount 1
	+UNDROPPABLE
}


//11500-11599 is for quests