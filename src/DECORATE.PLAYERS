const int PERSISTENT_INVENTORY_LEN = 83; //Comes from PLAYER.acs. Keep the two in sync!
                                         //XXX: To work around a GZDoomBuilder bug, also
                                         //update the length in DoomZBackpack below!

actor Survivalist : DoomPlayer
{
  //Speed 0.3 //Original Survivalism speed. Too slow!
  Speed 0.5
  Player.ViewHeight 51 // Default is 41
  //Player.StartItem "Pistol"
  Player.StartItem "Axe" 
  //Player.StartItem "Clip", 50
  	DamageFactor "SentryTurret", 0.0

        
	States
	{
	  Pain.Hunger:
		goto Pain
	  Death.Hunger:
	  Death:
	    TNT1 A 0
	//	Stop
		//Drop an inventory guardian if the player has one
        TNT1 A 0
		PLAY H 1 ACS_ExecuteAlways(961, 0, tid)
		PLAY H 1 A_Stop //Set velocity to zero so your inventory guard lands with your stuff
	    PLAY H 1 ACS_ExecuteAlways(853, 0) //Drop everything into a backpack
        //PLAY H 0 A_GiveInventory("PlayerDropStuff", 1)
        PLAY H 0 A_PlayerSkinCheck("AltSkinDeath")
		goto Death1
	  Death1:
		PLAY H 10
		PLAY I 10 A_PlayerScream
		PLAY J 10 A_NoBlocking
		PLAY KLM 10
		PLAY N 6300 //3 mins
		Stop
	  XDeath:
		TNT1 A 0
		//Drop an inventory guardian if the player has one
		PLAY H 1 ACS_ExecuteAlways(961, 0, tid)
		PLAY H 1 A_Stop //Set velocity to zero so your inventory guard lands with your stuff
	    PLAY H 1 ACS_ExecuteAlways(853, 0) //Drop everything into a backpack
        //PLAY H 0 A_GiveInventory("PlayerDropStuff", 1) -- Old, pre r15test9
		PLAY O 0 A_PlayerSkinCheck("AltSkinXDeath")
		goto XDeath1
	  XDeath1:
		PLAY O 5
		PLAY P 5 A_XScream
		PLAY Q 5 A_NoBlocking
		PLAY RSTUV 5
		PLAY W 6300 // 3 mins
		Stop
	}
}


ACTOR PseudoSpectator : PlayerPawn 15813
{
  Game Doom
  +DONTMORPH
  +FLOAT
  +INVISIBLE
  //+NOGRAVITY
  +SPAWNCEILING
  -PICKUP
  -SOLID
  -SHOOTABLE
  //-VULNERABLE
  +NONSHOOTABLE
  +THRUACTORS
  //+NOTRIGGER - Zandronum 2.0 - not in 1.3
  //CameraHeight 200
  
  States
  {
	Death:
	Death1:
	XDeath:
	XDeath1:
		TNT1 A 0
		TNT1 A 10 A_PlayerScream
		TNT1 A 10 A_NoBlocking
		TNT1 A 10 A_TakeInventory("PseudoSpectatorFlag", 0x7FFFFFFF)
		TNT1 A -1
		stop
  }
}

ACTOR PseudoSpectatorMorph : PowerupGiver 15814
{
 Powerup.Type PseudoSpectatorPlayer 
 Powerup.Duration 525  //In tics!
 Inventory.MaxAmount 0
 +INVENTORY.AUTOACTIVATE
 Yscale .8
}

ACTOR PowerPseudoSpectatorPlayer : PowerMorph
{
 PowerMorph.PlayerClass "PseudoSpectator"
 PowerMorph.MorphFlash "NoFlash"
 PowerMorph.UnMorphFlash "NoFlash" 
}

ACTOR NoFlash
{
 RenderStyle None
 States
 {
 Spawn:
  TNT1 A 1
  Stop
 }
} 


actor PlayerHasLoadedInventory : CustomInventory
{
	Inventory.MaxAmount 1
	States 
	{
		Drop:
			TNT1 A 0
			Fail
	}
}

// Player drops stuff when he dies
// http://forum.zdoom.org/viewtopic.php?f=3&t=16048
// Thanks to bagheadspidey from the zdoom forums!
// DEPRECATED as of r16! ********************
ACTOR  PlayerDropStuff : CustomInventory
{
   inventory.maxamount 0
   inventory.amount 0
   +INVENTORY.AUTOACTIVATE

   States
   {
   Use:

   // drop weapons
      TNT1 A 0 A_DropInventory ("Knife")
      TNT1 A 0 A_DropInventory ("DoomZChainsaw")
      TNT1 A 0 A_DropInventory ("Yellowboy")
      TNT1 A 0 A_DropInventory ("DoomZShotgun")
      TNT1 A 0 A_DropInventory ("DoomZSuperShotgun")
      TNT1 A 0 A_DropInventory ("DoomZPistol")
      TNT1 A 0 A_DropInventory ("Glock18")
      TNT1 A 0 A_DropInventory ("DoomZChaingun")
      TNT1 A 0 A_DropInventory ("HuntingRifle")
      TNT1 A 0 A_DropInventory ("WensternShotgun")
	  //TNT1 A 0 A_DropInventory ("Axe")
	  TNT1 A 0 A_DropInventory ("Bow")
	  TNT1 A 0 A_DropInventory ("Bucket")
	  //TNT1 A 0 A_DropInventory ("DoomZBoxPlacer")
      TNT1 A 0 A_DropInventory ("Chaingun")
      TNT1 A 0 A_DropInventory ("RocketLauncher")
      TNT1 A 0 A_DropInventory ("PlasmaRifle")
      TNT1 A 0 A_DropInventory ("BFG9000")
	  TNT1 A 0 A_DropInventory ("GraplingAmmo") //Rope
	  TNT1 A 0 A_DropInventory ("GasolineAmmo") //Ammo for chainsaw
	  //TNT1 A 0 A_DropInventory ("DoomZShellBoxItem") 
	  //TNT1 A 0 A_DropInventory ("DoomZClipBoxItem") 
	  //TNT1 A 0 A_DropInventory ("DoomZQuiverItem") 

   // drop other crap
      TNT1 A 0 A_DropInventory ("LootBox")
      TNT1 A 0 A_DropInventory ("CBoxItem")
      TNT1 A 0 A_DropInventory ("CKitItem")
      TNT1 A 0 A_DropInventory ("CDoorItem")
      TNT1 A 0 A_DropInventory ("CFloorItem")
      TNT1 A 0 A_DropInventory ("CPillarItem")
      TNT1 A 0 A_DropInventory ("CStoneBoxItem")
      TNT1 A 0 A_DropInventory ("CraftingBoxItem")
      TNT1 A 0 A_DropInventory ("QuestBoxItem")
      TNT1 A 0 A_DropInventory ("Coal")
      //TNT1 A 0 A_DropInventory ("Steel")
      TNT1 A 0 A_DropInventory ("SentryBox")
      TNT1 A 0 A_DropInventory ("TorchItem")
      TNT1 A 0 A_DropInventory ("TurnipSeeds")
      TNT1 A 0 A_DropInventory ("Turnip")
      TNT1 A 0 A_DropInventory ("TreeSeeds")
      TNT1 A 0 A_DropInventory ("HempSeeds")
      TNT1 A 0 A_DropInventory ("FireSpell")
      TNT1 A 0 A_DropInventory ("DoomZEgg")
      TNT1 A 0 A_DropInventory ("ChickenItem")
      TNT1 A 0 A_DropInventory ("CookedChicken")
      TNT1 A 0 A_DropInventory ("LogItem")
      TNT1 A 0 A_DropInventory ("FurnaceItem")
      TNT1 A 0 A_DropInventory ("GargoyleStatueItem")
      TNT1 A 0 A_DropInventory ("TechLampItem")
      TNT1 A 0 A_DropInventory ("FloorLampItem")
      TNT1 A 0 A_DropInventory ("SpikeItem")
      TNT1 A 0 A_DropInventory ("Ankh")
      TNT1 A 0 A_DropInventory ("BlueberryItem")
      TNT1 A 0 A_DropInventory ("StrawberryItem")
      TNT1 A 0 A_DropInventory ("CranberryItem")
      TNT1 A 0 A_DropInventory ("BerryMash")
      TNT1 A 0 A_DropInventory ("IronOre")
      TNT1 A 0 A_DropInventory ("Silica")
      TNT1 A 0 A_DropInventory ("ComputerChip")
      TNT1 A 0 A_DropInventory ("CSteelBoxItem")
      TNT1 A 0 A_DropInventory ("JackItem")
      TNT1 A 0 A_DropInventory ("HoistItem")
      TNT1 A 0 A_DropInventory ("CGlassBoxItem")
      TNT1 A 0 A_DropInventory ("ParachuteItem")

   //   TNT1 A 0 A_DropInventory ("Backpack")
   //   TNT1 A 0 A_DropInventory ("BlueCard")
   //   TNT1 A 0 A_DropInventory ("BlueSkull")
   //   TNT1 A 0 A_DropInventory ("RedCard")
   //   TNT1 A 0 A_DropInventory ("RedSkull")
   //   TNT1 A 0 A_DropInventory ("YellowCard")
   //   TNT1 A 0 A_DropInventory ("YellowSkull")
   // drop ammo
   /*
   FindArrows:
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 50, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 45, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 40, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 35, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 30, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 25, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 20, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 15, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 10, 10)
      TNT1 A 0 A_JumpIfInventory ("ArrowAmmo", 5, 10)
      goto "FindBullets"
   DropArrows:
      TNT1 AAAAAAAAAA 0 A_SpawnItem ("ArrowAmmo")
   FindBullets:
      TNT1 A 0 A_JumpIfInventory ("Clip", 400, 8)
      TNT1 A 0 A_JumpIfInventory ("Clip", 350, 8)
      TNT1 A 0 A_JumpIfInventory ("Clip", 300, 8)
      TNT1 A 0 A_JumpIfInventory ("Clip", 250, 8)
      TNT1 A 0 A_JumpIfInventory ("Clip", 200, 8)
      TNT1 A 0 A_JumpIfInventory ("Clip", 150, 8)
      TNT1 A 0 A_JumpIfInventory ("Clip", 100, 8)
      TNT1 A 0 A_JumpIfInventory ("Clip", 50, 8)
      goto "FindShells"
   DropBullets:
      TNT1 AAAAAAAA 0 A_SpawnItem ("ClipBox")
   FindShells:
      TNT1 A 0 A_JumpIfInventory ("Shell", 100, 5)
      TNT1 A 0 A_JumpIfInventory ("Shell", 80, 5)
      TNT1 A 0 A_JumpIfInventory ("Shell", 60, 5)
      TNT1 A 0 A_JumpIfInventory ("Shell", 40, 5)
      TNT1 A 0 A_JumpIfInventory ("Shell", 20, 5)
      goto "FindRockets"
   DropShells:
      TNT1 AAAAA 0 A_SpawnItem ("ShellBox")
   FindRockets:
      TNT1 A 0 A_JumpIfInventory ("RocketAmmo", 100, 4)
      TNT1 A 0 A_JumpIfInventory ("RocketAmmo", 75, 8)
      TNT1 A 0 A_JumpIfInventory ("RocketAmmo", 50, 12)
      TNT1 A 0 A_JumpIfInventory ("RocketAmmo", 25, 16)
      goto "FindCells"
   DropRockets:
      TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_SpawnItem ("RocketBox")
   FindCells:
      TNT1 A 0 A_JumpIfInventory ("Cell", 600, 6)
      TNT1 A 0 A_JumpIfInventory ("Cell", 500, 6)
      TNT1 A 0 A_JumpIfInventory ("Cell", 400, 6)
      TNT1 A 0 A_JumpIfInventory ("Cell", 300, 6)
      TNT1 A 0 A_JumpIfInventory ("Cell", 200, 6)
      TNT1 A 0 A_JumpIfInventory ("Cell", 100, 6)
      goto "TakeAmmo"
   DropCells:
      TNT1 AAAAAA 0 A_SpawnItem ("CellPack")
   */
   TakeAmmo:      
      TNT1 A 0 A_TakeInventory ("Clip", 0x7FFFFFFF)
      TNT1 A 0 A_TakeInventory ("Shell", 0x7FFFFFFF)
      TNT1 A 0 A_TakeInventory ("RocketAmmo", 0x7FFFFFFF)
      TNT1 A 0 A_TakeInventory ("Cell", 0x7FFFFFFF)
      TNT1 A 0 A_TakeInventory ("ArrowAmmo", 0x7FFFFFFF)
   }
}


ACTOR PseudoSpectatorFlag : Inventory
{
}

/** Backpack that drops when player dies. It users user variables to contain all the player's inventory.
    Super subtle trick alert - User variables don't work correctly in Pickup/Use states in CustomInventory,
    but they DO work with FakeInventory. FakeInventory calls its special when picked up, and if we use
    ACS_ExecuteWithResult, the backpack still exists during the period of that call, AND we're able to
    access the user vars successfully from ACS. That took me like 4 hours and lots of IRC to figure out.
*/
actor DoomZBackpack : FakeInventory
{
    var int user_tid;
    var int user_inventory[83]; //PERSISTENT_INVENTORY_LENGTH
    
    Height 26
    Inventory.PickupMessage "Picked up the backpack of a fallen survivor!" // "Picked up a backpack full of ammo!"
    Health 800
    +SHOOTABLE
    
    /** TODO: Zandronum 3.0
            Try using INVENTORY.TRANSFER with CustomInventory instead!
    */
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 //ACS_ExecuteAlways(506, 0) //Assign us a unique TID
            TNT1 A 0 A_SetSpecial(84, 854, user_tid, user_inventory[0])
            BPAK A -1
            Stop

    }
}


