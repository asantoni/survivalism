

actor TorchItem : CustomInventory
{
	Health 10
	+SHOOTABLE
	+NOBLOOD
    +WINDTHRUST
	Tag "Torch"
	//+CANPASS //---> crazy CPU usage
	Inventory.PickupMessage "Picked up a torch!"
	Inventory.UseSound "misc/invuse"
	+INVENTORY.INVBAR
	Inventory.Icon "TRCHA0" //"PISTI0"
	Inventory.MaxAmount 50
	//+COUNTITEM
	+INVENTORY.PICKUPFLASH
	
	States
	{
		Spawn:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TRCH G -1
			Stop
		Use:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 0 A_SpawnItemEx("Torch", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
								64.0, 0.0, 32.0, 
								0.0, 0.0, 0.0, //velocity 
								0.0, //angle
								0) //flags
		Stop
	}
}

actor Torch : ShortRedTorch
{
	Health 10
	-NOGRAVITY
	+SHOOTABLE
	+NOBLOOD
	+SOLID
	+FLOORCLIP
	+STANDSTILL
	+CANPASS //---> crazy CPU usage
	+ISMONSTER //Needed for SXF_SETMASTER
	+FRIENDLY
	+CANTSEEK
	+NOTARGET
	-COUNTKILL
	//+DORMANT
	Damage 0
	DamageFactor "SentryTurret", 0.0
    
    Height 38.0 //Make it match the height of boxes, which is really close anyways.

	States
	{
		//Pain:
		//	TNT1 A 0
		//	TNT1 A 0 A_Jump(256, "Spawn")
		Spawn:
			TNT1 A 0 
			TNT1 A 0 A_SpawnItemEx("MonsterSpawnerRepeller", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION, 0)
		Illuminate:
			SMRT ABCD 4 Bright
			Loop
		Death:
		XDeath:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 1 A_KillChildren
			TNT1 A 1 A_RemoveChildren(true)
			TNT1 A 0 A_SpawnItemEx("TorchItem", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
							   0.0, 0.0, 32.0, 
							   0.0, 0.0, 6.0, //velocity 
							   0.0, //angle
							   0) //flags
			Stop
	}
}

actor WaterfallSprayer 10300
{
	+CLIENTSIDEONLY
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("waterfall", CHAN_BODY, 1.0, true, 0.5)
		Spray:
            TNT1 A 8 A_SpawnItemEx("WaterfallSpray", 0, 0, 16.0, random(0.0, 5.0), random(-2.0, 2.0), 16.0, 0, SXF_NOCHECKPOSITION, 32)
            TNT1 A 0 A_Jump(128, "Spray", "SpraySmooth")
            loop
        SpraySmooth:
            //Intentionally lower velz for smooth spray, to make it look nicer
            TNT1 A 8 A_SpawnItemEx("WaterfallSpraySmooth", 0, 0, 16.0, random(0.0, 5.0), random(-2.0, 2.0), 8.0, 0, SXF_NOCHECKPOSITION, 32)
            TNT1 A 0 A_Jump(128, "Spray", "SpraySmooth")
            loop
	}
}

actor WaterfallSpray
{
	RenderStyle "Add"
	Scale 4.0
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD 
	+DONTSPLASH

	States
	{
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_SetScale(random(scaley/2, scaley))
        SpawnLoop:
            TNT1 A 0
            //Actor will be removed automatically when it fades to 0
            WTFL A 4 A_FadeOut(0.1)
            WTFL A 4 A_FadeOut(0.1)
            WTFL B 4 A_FadeOut(0.1)
            WTFL B 4 A_FadeOut(0.1)
            WTFL CCDDDEEEFFFFF 4 A_FadeOut(0.1)
			loop	
	}
}


actor WaterfallSpraySmooth : WaterfallSpray
{
    //Smooth spray actor

    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_SetScale(random(scaley/2, scaley))
        SpawnLoop:
            //Actor will be removed automatically when it fades to 0
            WTF2 A 4 A_FadeOut(0.1)
            WTF2 A 4 A_FadeOut(0.1)
            loop
    }
}

actor RapidsSprayer 10302
{
	+CLIENTSIDEONLY
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_PlaySoundEx("waterstream", CHAN_BODY, true, 0.5)
			//TNT1 A 0 A_PlaySound("waterfall", CHAN_BODY, 1.0, true, 0.5)
		Procrastinate:
			TNT1 A 0
            TNT1 A 4 A_Jump(128, "Spray", "SpraySmooth")
			loop
		Spray:
            TNT1 A 8 A_SpawnItemEx("RapidsSpray", 0, 0, 16.0, random(0.0, 4.0), random(-2.0, 2.0), 6.0, 0, SXF_NOCHECKPOSITION | SXF_CLIENTSIDE, 32)
			goto Procrastinate
        SpraySmooth:
            TNT1 A 8 A_SpawnItemEx("RapidsSpraySmooth", 0, 0, 16.0, random(0.0, 4.0), random(-2.0, 2.0), 4.0, 0, SXF_NOCHECKPOSITION | SXF_CLIENTSIDE, 32)
            goto Procrastinate
}
}

actor RapidsSpray : WaterfallSpray
{
	+DONTSPLASH
	Scale 1.0
}

actor RapidsSpraySmooth : WaterfallSpraySmooth
{
    +DONTSPLASH
    Scale 1.0
}

actor WaterfallSprayer2 10303
{
	RenderStyle "Translucent"

	+CLIENTSIDEONLY
	+NOGRAVITY
	+NOBLOCKMAP
	Alpha 0.2
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("waterfall", CHAN_BODY, 1.0, true, 0.5)
		Spray:
			TNT1 A 0 A_Jump(256, "Spray1", "Spray2", "Spray3")
		Spray1:
			TNT1 A 9 A_SpawnItemEx("WaterfallSpray2", random(-32.0, 32.0), random(-32.0, 0), -932.0, random(-2.0, 2.0), 0.0, random(-8.0, -4.0), 0, SXF_NOCHECKPOSITION, 0)
			goto Spray
		Spray2:
			TNT1 A 9 A_SpawnItemEx("WaterfallSpray3", random(-32.0, 32.0), random(-32.0, 0), -932.0, random(-2.0, 2.0), 0.0, random(-8.0, -4.0), 0, SXF_NOCHECKPOSITION, 0)
			goto Spray
		Spray3:
			TNT1 A 9 A_SpawnItemEx("WaterfallSpray4", random(-32.0, 32.0), random(-32.0, 0), -932.0, random(-2.0, 2.0), 0.0, random(-8.0, -4.0), 0, SXF_NOCHECKPOSITION, 0)
			goto Spray
	}
}

// These waterfall spray actors use a model to act like flat (non-billboarded) sprites.
// See MODELDEF and the models/ directory.
actor WaterfallSpray2
{
	RenderStyle "Add"
	Scale 1.0
	+NOBLOCKMAP
	+CLIENTSIDEONLY
	//+FORCEXYBILLBOARD 
	//+FORCEYBILLBOARD 
	//+DONTSPLASH
	
	States
	{
		Spawn:
			TNT1 A 0
			WTFL B 0 A_FadeOut(0.5)
			WTFL BBBB 6 A_FadeIn(0.2)
			goto FadeOutAndDie
		FadeOutAndDie:
			//WTFL B 2 A_FadeOut(0.5) //Actor will be removed automatically when it fades to 0
			WTFL B 1 A_JumpIf (z <= floorz, "Crash")
			loop
		Crash:
			//WTFL B 5
			WTFL B 0
			Stop
	}
}

actor WaterfallSpray3 : WaterfallSpray2
{
	States
	{
		Spawn:
			TNT1 A 0
			WTFL C 0 A_FadeOut(0.8)
			WTFL CCCC 6 A_FadeIn(0.1)
			goto FadeOutAndDie
		FadeOutAndDie:
			WTFL C 10 A_FadeOut(0.1) //Actor will be removed automatically when it fades to 0
			WTFL C 0 A_JumpIf (z <= floorz, "Crash")
			loop
		Crash:
			WTFL C 5
			Stop
	}
}

actor WaterfallSpray4 : WaterfallSpray2
{
	States
	{
		Spawn:
			TNT1 A 0
			WTFL D 0 A_FadeOut(0.8)
			WTFL DDDD 6 A_FadeIn(0.1)
			goto FadeOutAndDie
		FadeOutAndDie:
			WTFL D 10 A_FadeOut(0.1) //Actor will be removed automatically when it fades to 0
			WTFL D 0 A_JumpIf (z <= floorz, "Crash")
			loop
		Crash:
			WTFL D 5
			Stop
	}
}



actor DoomZFogSpawner /* : FogSpawner */ 10301
{
	+CLIENTSIDEONLY
    +NOBLOCKMAP
    -SHOOTABLE
    +NOINTERACTION

	States
	{
		Spawn:
			TNT1 A 0
		Spray:
			TNT1 A 70 A_SpawnItemEx("BigFog", 0, 0, 16.0, random(1.0, 3.0), 0.0, 0.0, random(0, 65535), SXF_NOCHECKPOSITION | SXF_CLIENTSIDE, 32)
			Loop
	}
}

actor BigFog
{
    +CLIENTSIDEONLY
    +FORCEXYBILLBOARD
    +NOBLOCKMAP
    -SHOOTABLE
    +NOINTERACTION
    +NOGRAVITY
    -SOLID
    +MISSILE //So bounce works
    
    BounceType "Doom"
    +BOUNCEONWALLS
    
    Scale 6.0
    RenderStyle "Translucent"
    Alpha 0.5
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_Jump(256, "Fog1", "Fog2", "Fog3", "Fog4", "Fog5")
        Fog1:
            FOGL AAAAAAAA 70
            FOGL AAAAAAAAAA 10 A_FadeOut(0.1)
            stop
        Fog2:
            FOGL BBBBBBBB 70
            FOGL BBBBBBBBBB 10 A_FadeOut(0.1)
            stop
        Fog3:
            FOGL CCCCCCCC 70
            FOGL CCCCCCCCCC 10 A_FadeOut(0.1)
            stop
        Fog4:
            FOGL DDDDDDDD 70
            FOGL DDDDDDDDDD 10 A_FadeOut(0.1)
            stop
        Fog5:
            FOGL EEEEEEEE 70
            FOGL EEEEEEEEEE 10 A_FadeOut(0.1)
            stop
            
    }
}




actor SpikeItem : CustomInventory
{
	Health 10
	+SHOOTABLE
	+NOBLOOD
    +WINDTHRUST
	Tag "Wooden Spike"
	//+CANPASS //---> crazy CPU usage
	Inventory.PickupMessage "Picked up a spike!"
	Inventory.UseSound "misc/invuse"
	+INVENTORY.INVBAR
	Inventory.Icon "spike" //"PISTI0"
	Inventory.MaxAmount 50
	//+COUNTITEM
	+INVENTORY.PICKUPFLASH
	
	States
	{
		Spawn:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			SPKE A -1
			Stop
		Use:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 0 A_SpawnItemEx("DoomZSpike", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
								64.0, 0.0, 32.0, 
								0.0, 0.0, 0.0, //velocity 
								0.0, //angle
								0) //flags
		Stop
	}
}

actor DoomZSpike : Stalagtite
{
	Monster
	+FRIENDLY
	Health 150
	Mass 0x7FFFFFFF
	-NOGRAVITY
	+SHOOTABLE
	+NOBLOOD
	+SOLID
	+FLOORCLIP
	+STANDSTILL
	//+NOTARGET
	//+NOTRIGGER
	+CANPASS //---> crazy CPU usage
	-COUNTKILL
	+LOOKALLAROUND
	//+DORMANT
	Damage 5
  
	DamageType "NoXP"
	DamageFactor "Axe", 10.0
  
	States
	{
		//Pain:
		//	TNT1 A 0
		//	TNT1 A 0 A_Jump(256, "Spawn")
		Spawn:
			TNT1 A 0 
			TNT1 A 0 ACS_ExecuteAlways(503, 0)
		SpawnLook:
			//SMT2 A 10 A_Look
			SMIT A 10 A_Look
			Loop
		See:
			SMIT A 10 A_Chase
		Melee:
			SMIT A 10 A_CustomMeleeAttack(5, "", "", "NoXP", true)
			goto See
		Death.Axe:
			TNT1 A 0
			TNT1 A 0 A_SpawnItemEx("SpikeItem", //ACS_ExecuteWithResult(930, x), ACS_ExecuteWithResult(931, y), 
							   0.0, 0.0, 32.0, 
							   0.0, 0.0, 6.0, //velocity 
							   0.0, //angle
							   0) //flags
			Stop
		Death:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 1 A_KillChildren
			Stop
	}
}

actor WaterAmmo : Ammo
{
	Inventory.PickupMessage "You got some water."
	Inventory.Amount 10
	Inventory.MaxAmount 10
	
	States
	{
		Spawn:
			TNT1 A 0
			Stop
	}
	
}

actor Bucket : Weapon
{
	+WEAPON.NO_AUTO_SWITCH
	+WEAPON.AMMO_OPTIONAL
	//NOAUTOAIM - Zandronum 3.0
	inventory.pickupsound "misc/i_pkup"
	inventory.pickupmessage "You found a water bucket!"
	inventory.icon "BCKTB0"
	Weapon.SelectionOrder 9999
	Weapon.SlotNumber 1
	Weapon.SlotPriority 0.1
	DamageType "Water"
	Tag "Water Bucket"
	
	weapon.ammotype "WaterAmmo"
	weapon.ammogive 0
	weapon.ammouse 1

	states {
		Spawn:
			BCKT B -1 //B is empty bucket
			stop
		Ready:
		Full:
			TNT1 A 0
			TNT1 A 0 A_JumpIfNoAmmo("Empty")
			BCKT D 1 A_WeaponReady
			goto Ready
		Empty:
			BCKT C 1 A_WeaponReady
			goto Ready
		Deselect:
			TNT1 A 0 A_JumpIfNoAmmo("LowerEmpty")
		LowerFull:
			BCKT D 1 A_Lower
			loop
		LowerEmpty:
			BCKT C 1 A_Lower
			loop
		Select:
			TNT1 A 0 A_JumpIfNoAmmo("RaiseEmpty")
		RaiseFull:
			BCKT D 1 A_Raise
			loop
		RaiseEmpty:
			BCKT C 1 A_Raise
			loop
		Fire:
			TNT1 A 0
			TNT1 A 0 A_JumpIfNoAmmo("CheckForWaterAhead")
		SprayWater:
			BCKT D 1 Offset(0, 32)
			BCKT D 1 Offset(0, 22)
			BCKT D 1 Offset(0, 11)
			BCKT D 1 Offset(0, -8)
			//BCKT C 0 A_GunFlash
			BCKT D 5 Offset(0, -8) A_FireCustomMissile("BucketSplash", 0, 1, 0, 16)
			BCKT D 0 A_JumpIfNoAmmo("FinishSprayWaterEmpty")
			BCKT D 3 Offset(0, 16)
			BCKT D 2 Offset(0, 24)
			BCKT D 3 
			BCKT D 2 A_ReFire
			goto Ready
	    //Last half of the above state, but for when your bucket just got emptied
		FinishSprayWaterEmpty: 
			BCKT C 3 Offset(0, 16)
			BCKT C 2 Offset(0, 24)
			BCKT C 3 
			BCKT C 2 A_ReFire
			goto Ready
		CheckForWaterAhead:
			BCKT C 4 A_FireCustomMissile("BucketTracer", 0, 0, 0, 8, 0)
			TNT1 A 0 A_JumpIfNoAmmo("Ready")
			BCKT C 1 Offset(0, 38)
			BCKT C 1 Offset(0, 46)
			BCKT C 1 Offset(0, 53)
			BCKT C 1 Offset(0, 61)
			BCKT C 1 Offset(0, 75)
			BCKT C 1 Offset(0, 95)
			BCKT C 1 Offset(0, 110)
			BCKT C 1 Offset(0, 120)
			BCKT C 1 Offset(0, 128)
			BCKT C 8 Offset(0, 128) A_PlaySound("world/watersplash2")
			BCKT D 1 Offset(0, 122) 
			BCKT D 1 Offset(0, 115) 
			BCKT D 1 Offset(0, 102) 
			BCKT D 1 Offset(0, 96) 
			BCKT D 1 Offset(0, 82) 
			BCKT D 1 Offset(0, 74)
			BCKT D 1 Offset(0, 64)
			BCKT D 1 Offset(0, 56)
			BCKT D 1 Offset(0, 48) 
			BCKT D 1 Offset(0, 42) 
			BCKT D 1 Offset(0, 37)
			BCKT D 1 Offset(0, 32)
			goto Ready

	}
}

actor NoPuff : BulletPuff
{
    +CLIENTSIDEONLY
    RenderStyle "None"
}

actor BucketSplash
{
  DamageType "Water"

  Radius 11
  Height 16
  Speed 20
  Damage 1
  Projectile
  -NOGRAVITY
  +RANDOMIZE
  +FORCEXYBILLBOARD 
  Scale 2.0
  //SeeSound "weapons/rocklf"
  //DeathSound "weapons/rocklx"
  //Obituary "drowned"
  
  //ProjectileKickBack 100 //Zandronum 3.0
  
  States
  {
  Spawn:
    WTRS A 1
    Loop
  Death:
    WTRS A 0 A_Explode(1, 24, 0, false, 24, 0, 0, "NoPuff")
    WTRS A 1 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 0 A_SpawnItemEx("BucketSplashSecondary", 0, 0, 0, 4.0, 0.0, random(4.0, 6.0), random(0, 255), 0, 64)
    WTRS A 8 A_PlaySound("world/watersplash2")
  FadeOut:
    WTRS A 1 A_FadeOut
    Loop
  }
}

actor BucketSplashSecondary : BucketSplash
{
  +CLIENTSIDEONLY
  DamageType None
  Damage 0
  Scale 1.0
  //SeeSound "weapons/rocklf"
  //DeathSound "weapons/rocklx"
  //Obituary "drowned"
  
  //ProjectileKickBack 0
  
  States
  {
  Spawn:
    WTRS A 1
    Loop
  Death:
    WTRS A 2 A_PlaySound("world/lavsiz22")
    WTRS A 2
  FadeOut:
    WTRS A 1 A_FadeOut
    Loop
  }
}

actor BucketTracer
{
	Projectile
	-NOGRAVITY
	-NOBLOCKMAP //Need to be in the blockmap to detect the floor texture 
	-DONTSPLASH
	speed 10

	States
	{
		Spawn:
			TNT1 A 0 ACS_ExecuteAlways(952, 0, AAPTR_TARGET)
			TNT1 AAAA 1 ACS_ExecuteAlways(952, 0, AAPTR_TARGET)
		Death:
		Crash:
		XDeath:
			TNT1 A 0
			//Check if we hit water and give the player water if so.
			TNT1 A 0 ACS_ExecuteAlways(952, 0, AAPTR_TARGET)
			stop
	}
}


actor DoomZHealthBonus : HealthBonus
{
	+SHOOTABLE
	Inventory.Amount 3 //How much health to give
	Health 20
	States
	{
	  Spawn:
		TNT1 A 0
		TNT1 A 0 A_SetArg(1, 536) //21000 / 36  (10 minutes / 36)
		BON1 ABCDCB 6
		TNT1 A 0 A_CountdownArg(1, "Death")
		Loop
	  Death:
		TNT1 A 0
		Stop
	}
}


ACTOR Ankh : CustomInventory
{
  Inventory.Amount 1 
  Inventory.Icon "ARTIALI1"
  Inventory.InterHubAmount 100
  Inventory.MaxAmount 1
  Inventory.PickupMessage "You found the Ankh Of Life - Use it to defeat death!"
  Inventory.PickupSound "misc/p_pkup"
  Tag "Ankh of Life"
  
  -COUNTITEM
  +FLOATBOB
  //+INVENTORY.INVBAR
  +INVENTORY.PICKUPFLASH
  +INVENTORY.AUTOACTIVATE //Trying it out, simplifies my life
  States
  {
  Spawn:
	AKOL A 0
    AKOL A 0 A_PlaySound("antihunt", CHAN_ITEM, 1.0, true, ATTN_NORM)
  SpawnWait:
    AKOL A 0
	AKOL A -1 
	Wait
  Use:
	TNT1 A 0 ACS_ExecuteAlways(956, 0, 0) //Kill the Death actor chasing the player
	stop
  //This pickup logic has to use A_JumpIf because it the simpler logic here doesn't work in multiplayer:
  /* Simple logic: - Works perfectly in singleplayer (Zandronum 2.0), but broken in multiplayer
   Pickup:
	AKOL A 0
	AKOL A 0 ACS_ExecuteWithResult(957, 0, 0) //Only allow pickup if the player has DeathCurse
	stop
  */
  //More complicated logic, but works correctly in multiplayer:
  Pickup:
	AKOL A 0
	AKOL A 0 A_JumpIf(ACS_ExecuteWithResult(957, 0, 0), "PickupAndStore") //Only allow pickup if the player has DeathCurse
	stop
  PickupAndStore:
	AKOL A 0 
	AKOL A 0 A_RailWait
	stop
  //End of more complicated but functional logic for multiplayer
  }
}

//Dummy inventory indicating you're cursed.
actor DeathCurse : Inventory
{
	Tag "Death Curse"
	Inventory.MaxAmount 1
	+UNDROPPABLE
}


actor JackItem : CustomInventory
{
	Tag "Jack"
	+SHOOTABLE
	+NOBLOOD
    +WINDTHRUST
    Health 100
    Inventory.Amount 1 
    Inventory.Icon "JACKI"
    Inventory.InterHubAmount 100
    Inventory.MaxAmount 10
    Inventory.PickupMessage "You found a jack - place it under a construction to lift it!"
    Inventory.PickupSound "misc/p_pkup"
  -COUNTITEM
  //+FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.PICKUPFLASH

   States {
      Spawn:
         JACG A 1
         Wait
      Use:
         TNT1 A 0 A_JumpIfInventory("ConstructionMutex",1,"Cancel")
         TNT1 A 0 A_SpawnItemEx("JackBase", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 256.0, 0.0, 0.0, -8.0, 0.0, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEMOMENTUM)
         TNT1 A 0 ACS_ExecuteAlways(256,0)      //Give ConstructionMutex, Wait, Take ConstructionMutex
         Stop
      Cancel:
         TNT1 A 0
         Fail
   }
}

actor JackBase
{
	Tag "Jack"
    +SOLID
    +SHOOTABLE
    +NOBLOOD
    +ISMONSTER //for SXF_SETMASTER to work 
    +CANPASS
    //+FRIENDLY // -> Breaks projectile spawning in children (JackTop) for some reason
    -COUNTKILL
    +NOTARGET
    
    +USESPECIAL

    Radius 24
	Height 28
    
    Mass 0x7FFFFFFF
    Health 400 //0x7FFFFFFF
    PainChance 255
    
    Args 10
    
    DamageFactor "SentryTurret", 0.0
    DropItem "JackItem"

    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_ChangeFlag("FRIENDLY", 0) //Because this is spawned by the player, it defaults to +FRIENDLY anyways. 
                                                 //We have to turn this off so that the JackChain can be killed by JackChainKiller otherwise
                                                 //the two friendly actors won't be able to attack each other.
                                                 //(What's crazy is the behaviour is different if you use "summon jackbase" (which makes this an enemy)
                                                 // compared to when you "summon jackitem" and then use it (which makes it a friend!)).
            //Make monsters attack it
            //TNT1 A 0 ACS_ExecuteAlways(503, 0)	
            //Execute this script when a player activates it
			TNT1 A 0 Thing_SetSpecial(0, 226, 969, 0, 0)
        WaitUntilLanded:
            JACK A 4
            JACK A 4 A_JumpIf(momz != 0, "WaitUntilLanded")
            TNT1 A 0 A_SetArg(2, z)
            TNT1 A 0 A_SpawnItemEx("JackTop", 0, 0, 28.0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION)
        Idle:
            TNT1 A 0
            JACK A 70 A_JumpIf(z != args[2], "ResetJackTop")
            loop
        //This state is used to fix the position of the top part in case the bottom falls.
        ResetJackTop:
            TNT1 A 0 
            TNT1 A 0 A_KillChildren
            goto WaitUntilLanded
        Pain:
            JACK A 0
            goto Idle
        Pain.Axe:
            TNT1 A 0
            JACK A 0 A_GiveInventory("Health", 10000)
            JACK A 0 A_PlaySound("jack/move")
            JACK A 1 A_DamageChildren(1, "Jack")
            goto Idle
        Pain.GoDown:
            TNT1 A 0
            JACK A 0 A_GiveInventory("Health", 10000)
            JACK A 0 A_PlaySound("jack/move")
            JACK A 1 A_DamageChildren(1, "Down")
            goto Idle
        Death:
            TNT1 A 0
            TNT1 A 0 A_KillChildren
            TNT1 A 0 //A_RemoveChildren
			TNT1 A 0 A_SpawnItemEx("JackItem", 8, 0, 8, 0, 0, 0, 0, 0, 0)
            stop

    }
}



actor JackTop
{
	Tag "Jack Top"
    +SOLID
    +SHOOTABLE
    +NOBLOOD
    +ISMONSTER //for SXF_SETMASTER to work 
    -COUNTKILL
    //+CANPASS
    +NOGRAVITY
    //+FRIENDLY
    +NOTARGET
    
    Radius 24
	Height 10
    
    Mass 0x7FFFFFFF
    Health 0x7FFFFFFF
    PainChance 256

    Args 8
    
    DamageFactor "SentryTurret", 0.0
    
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_ChangeFlag("FRIENDLY", 0)
            TNT1 A 0 A_SetArg(1, z)
            //Execute this script when a player activates it
			//TNT1 A 0 Thing_SetSpecial(0, 226, 969, 0, 0)

        Idle:
            TNT1 A 0
            JACK B -1
            wait
        Jack:
            JACK B 0
            JACK B 1 A_JumpIf(args[0] <= 0, "StopMoving") //A_Countdown's jump to an arbitrary state isn't working....
            JACK A 0 A_PlaySound("jack/move", CHAN_BODY, 1.0, true)
            JACK B 4 ACS_ExecuteAlways(968, 0, 0, 0)
            JACK B 0 A_SpawnItemEx("JackChain", 0, 0, -16.0, 0.0, 0.0, 0.0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION /*| SXF_CLIENTSIDE*/)
            JACK B 0 A_SetArg(0, args[0]-1)
            loop
 
        Lower:
            JACK B 0
            JACK B 0 A_JumpIf(z <= args[1], "StopMoving")
            JACK B 1 A_JumpIf(args[0] <= 0, "StopMoving") //A_Countdown's jump to an arbitrary state isn't working....
            JACK A 0 A_PlaySound("jack/move", CHAN_BODY, 1.0, true)
            JACK B 0 A_SpawnItemEx("JackChainKiller", 0, 0, -8.0, 0.0, 0.0, 0.0, 0, SXF_NOCHECKPOSITION /*| SXF_CLIENTSIDE*/)
            JACK B 4 ACS_ExecuteAlways(968, 0, 1, 0)
            JACK B 0 
            JACK B 0 A_SetArg(0, args[0]-1)
            loop
        StopMoving:
            TNT1 A 0
            JACK A 0 A_PlaySound("jack/stop", CHAN_BODY)
            goto Idle

        Pain:
            JACK B 0
            goto Idle
        Pain.Axe:
        Pain.Jack:
            TNT1 A 0
            JACK B 1 A_SetArg(0, 8)
            goto Jack
        Pain.Down: 
            TNT1 A 0
            JACK B 1 A_SetArg(0, 8)
            goto Lower
        Death:
            TNT1 A 0
            //Remove the chains
            TNT1 A 0 //A_RemoveChildren
            TNT1 A 0 A_KillChildren("Falldown")
            stop

    }
}

actor JackChain
{
    //+CLIENTSIDEONLY
    //+NOBLOCKMAP
    +ISMONSTER //For master/child
    +NOGRAVITY
    -WINDTHRUST
    //+THRUACTORS
    //+NODAMAGE
    +NOBLOOD
    //+FRIENDLY
    +NOTARGET
    //Zandronum 3.0: Use +NEVERTARGET so that friendly actors don't attack it!
    
    +SHOOTABLE //Needed to take damage to die?
    
    Mass 0x7FFFFFFF
    Health 0x7FFFFFFF
    PainChance 255
    
    DamageFactor "SentryTurret", 0.0
    
    Translation "64:79=96:111", "236:239=103:111", "176:191=152:159", "43:47=156:159"
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_ChangeFlag("FRIENDLY", 0)
            ROPE A -1
            Wait
        Pain.JackChainKiller:
            TNT1 A 0
            TNT1 A 0
            stop
        Pain:
        Pain.Falldown:
        Death.Falldown:
        Death:
            TNT1 A 0
            TNT1 A 0 
            TNT1 A 0 A_Stop //Zero the velocity otherwise it can fall to the side somehow
            ROPE A 70 A_Gravity
        FadeOut:
            ROPE A 4 A_FadeOut(0.1)
            loop
        
    }
}

actor JackChainKiller
{
    /*
    Projectile
    +THRUGHOST
    +DONTREFLECT
    +RIPPER
    -NOGRAVITY
    //-MISSILE
    //+NOBLOCKMAP
    //+CANPASS
    */
    
    +MISSILE
    +RIPPER
    -THRUACTORS
    //+CANPASS
    
    Speed 20
    DamageType "JackChainKiller"
    Damage 1 
    Radius 4
    Height 4
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_ChangeFlag("FRIENDLY", 0)
            TNT1 A 4 
            stop
        Death:  
            TNT1 A 2
            stop
    }
    
}


actor HoistItem : CustomInventory
{
	Tag "Hoist"
	+SHOOTABLE
	+NOBLOOD
    +WINDTHRUST
    Health 100
    Inventory.Amount 1 
    Inventory.Icon "HOISI"
    Inventory.InterHubAmount 100
    Inventory.MaxAmount 10
    Inventory.PickupMessage "You found a hoist - place it above something to lift it up!"
    Inventory.PickupSound "misc/p_pkup"
  -COUNTITEM
  //+FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.PICKUPFLASH

   States {
      Spawn:
         HOIG A 1
         Wait
      Use:
         TNT1 A 0 A_JumpIfInventory("ConstructionMutex",1,"Cancel")
         TNT1 A 0 A_SpawnItemEx("HoistBase", -x%48+((x%48)>24)*48-((x%48)<-24)*48, -y%48+((y%48)>24)*48-((y%48)<-24)*48, 256.0, 0.0, 0.0, 0.0, -angle%90+((angle%90)>45)*90-90, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEMOMENTUM)
         TNT1 A 0 ACS_ExecuteAlways(256,0)      //Give ConstructionMutex, Wait, Take ConstructionMutex
         Stop
      Cancel:
         TNT1 A 0
         Fail
   }
}

actor HoistBase
{
	Tag "Hoist"
    +SOLID
    +SHOOTABLE
    +NOBLOOD
    +ISMONSTER //for SXF_SETMASTER to work 
    +CANPASS
    //+FRIENDLY // -> Breaks projectile spawning in children (JackTop) for some reason
    -COUNTKILL
    +NOTARGET
    
    +USESPECIAL

    Radius 24
	Height 28.5
    
    Mass 0x7FFFFFFF
    Health 400 //0x7FFFFFFF
    PainChance 255
    DropItem "HoistItem"
    
    Args 10
    
    DamageFactor "SentryTurret", 0.0
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_ChangeFlag("FRIENDLY", 0)
            //Make monsters attack it
            //TNT1 A 0 ACS_ExecuteAlways(503, 0)	
            //Execute this script when a player activates it
			TNT1 A 0 Thing_SetSpecial(0, 226, 973, 0, 0)
            TNT1 A 0 A_SpawnItemEx("HoistLift", 62.0, 0, 0.0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION)
        Idle:
            TNT1 A 0
            HOIS A -1
            wait
        Pain:
            HOIS A 0
            goto Idle
        Pain.Axe:
            TNT1 A 0
            HOIS A 0 A_GiveInventory("Health", 10000)
            HOIS A 0 A_PlaySound("jack/move")
            HOIS A 1 A_DamageChildren(1, "Lift")
            goto Idle
        Pain.GoDown:
            TNT1 A 0
            HOIS A 0 A_GiveInventory("Health", 10000)
            HOIS A 0 A_PlaySound("jack/move")
            HOIS A 1 A_DamageChildren(1, "Down")
            goto Idle
        Death:
            TNT1 A 0
            TNT1 A 0 A_KillChildren
            TNT1 A 0 //A_RemoveChildren
			TNT1 A 0
            stop

    }
}



actor HoistLift
{
	Tag "Hoist Lift"

    +SHOOTABLE
    +NOBLOOD
    +ISMONSTER //for SXF_SETMASTER to work 
    -COUNTKILL
    //+CANPASS - If this is on, it prevents the hoist from lifting the player or other stuff
    +NOGRAVITY
    //+FRIENDLY
    +NOTARGET
    +FLOORCLIP
    
    -SOLID
    
    Radius 24
	Height 0.001
    
    Mass 0x7FFFFFFF
    Health 0x7FFFFFFF
    PainChance 256

    Args 8
    
    DamageFactor "SentryTurret", 0.0
    
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_ChangeFlag("FRIENDLY", 0)
            TNT1 A 1 A_SetArg(2, z)
            TNT1 A 1 A_SetArg(2, z)
            TNT1 A 1 A_SetArg(2, z)
            //Execute this script when a player activates it
			//TNT1 A 0 Thing_SetSpecial(0, 226, 973, 0, 0)

        Idle:
            TNT1 A 0
            HOIS B -1
            wait
        Lift:
            HOIS B 0
            HOIS B 0 A_ChangeFlag("NOGRAVITY", 1)
            HOIS B 0 A_ChangeFlag("SOLID", 1)
        LiftLoop:
            TNT1 A 0
            TNT1 A 0 A_CheckFloor(0) //Just trying to fix desync bug
            HOIS B 1 A_JumpIf(z >= args[2], "StopMoving") //A_Countdown's jump to an arbitrary state isn't working....
            HOIS B 0 A_PlaySound("jack/move", CHAN_BODY, 1.0, true)
            HOIS B 4 ACS_ExecuteAlways(972, 0, 0, 0)
            HOIS B 0
            //For the life of me, I could not make this work properly with the hoist. There's something weird going on that prevents it from
            //ripping through 
            HOIS B 0 A_SpawnItemEx("JackChainKiller", 0.0, 0.0, -16.0, 0.0, 0.0, 0.0, 0, SXF_NOCHECKPOSITION /*| SXF_CLIENTSIDE*/)
            HOIS B 0
            loop
        Lower:
            HOIS B 0
            //HOIS B 0 A_ChangeFlag("SOLID", 0) //r16 - Removed this
            HOIS B 0 A_ChangeFlag("NOGRAVITY", 0)
        LowerLoop:
            HOIS B 0 
            HOIS B 0 A_JumpIf(z <= floorz, "StopMovingAndLift")
            HOIS B 0 A_JumpIf(velz == 0, "Unblock") 
            HOIS B 0 A_ChangeFlag("SOLID", 1)
        LowerInnerLoop:
            HOIS B 0 A_PlaySound("jack/move", CHAN_BODY, 1.0, true)
            HOIS B 0 A_SpawnItemEx("JackChain", 0, 0, 16.0, 0.0, 0.0, 0.0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION /*| SXF_CLIENTSIDE*/)
            HOIS B 4 ACS_ExecuteAlways(972, 0, 1, 0)
            HOIS B 0 
            HOIS B 0 A_SetArg(0, args[0]-1)
            HOIS B 0 A_Jump(256, "LowerLoop")
            goto LowerLoop
            loop
        //If the platform hits something on the way down (z > 0 but velz == 0),
        //then we make it noclip through it and keep moving down.
        Unblock:
            HOIS B 0 
            HOIS B 0 A_ChangeFlag("SOLID", 0)
            HOIS B 0 A_Jump(256, "LowerInnerLoop")
            goto LowerInnerLoop
        StopMoving:
            TNT1 A 0
            TNT1 A 0 A_CheckFloor(0) //Just trying to fix desync bug
            TNT1 A 0 A_ChangeFlag("SOLID", 1)
            HOIS B 1 A_Stop
            HOIS B 0 A_Stop
            HOIS B 1 A_Stop //Fixes desync
            HOIS B 0 A_Stop
            HOIS B 0 A_Stop
            HOIS B 1 A_ChangeFlag("NOGRAVITY", 1)
            HOIS B 0 A_PlaySound("jack/stop", CHAN_BODY)
            HOIS B 0 //A_KillChildren
            goto Idle
        StopMovingAndLift:
            TNT1 A 0
            TNT1 A 0 A_ChangeFlag("SOLID", 1)
            HOIS B 0 A_ChangeFlag("NOGRAVITY", 1)
            HOIS B 35 A_PlaySound("jack/stop", CHAN_BODY)
            goto Lift

        Pain:
            HOIS B 0
            goto Idle
        Pain.Axe:
        Pain.Lift:
            TNT1 A 0
            HOIS B 1 A_SetArg(0, 8)
            goto Lift
        Pain.Down: 
            TNT1 A 0
            HOIS B 1 A_SetArg(0, 8)
            goto Lower
        Death:
            TNT1 A 0
            //Remove the chains
            TNT1 A 0 //A_RemoveChildren
            TNT1 A 0 A_KillChildren("Falldown")
            stop

    }
}

actor ParachuteItem : CustomInventory 
{
	Tag "Parachute"
	+SHOOTABLE
	+NOBLOOD
    +WINDTHRUST
	+BLOCKEDBYSOLIDACTORS //Zandronum 2.0
	+CANPASS //Crazy CPU, be careful
	
	//+SOLID
	Health 200
	Inventory.PickupMessage "Picked up a parachute"
	Inventory.UseSound "misc/invuse"
	Inventory.Icon "PARI" //"PISTI0"
	Inventory.MaxAmount 10
	+INVENTORY.INVBAR
	+INVENTORY.PICKUPFLASH
	//-INVENTORY.KEEPDEPLETED

	States
	{
		Spawn:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			PARG A 1
			Wait
		Use:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
			TNT1 A 0 
            TNT1 A 0 A_JumpIf(momz <= -4.0, "ReallyUse") //Only allow it to be deployed if you're falling
            TNT1 A 0 //A_Print("You must be falling to deploy your parachute.")
            fail
        ReallyUse:
            TNT1 A 0 ACS_ExecuteAlways(970, 0, 0)
            stop
    }
}

actor SpawnParachuteItem : ParachuteItem 
{
    -INVBAR

	States
	{
		Use:
			TNT1 A 0 //Dummy frame is needed for A_Jump to work
            TNT1 A 1 ACS_ExecuteAlways(970, 0, 10) //Deploy after 10 tics, unlike the regular ParachuteItem which requires momentum before triggering
            stop
    }
}

actor Parachute
{
    //+NONINTERACTIVE
    +NOBLOCKMAP
    -SOLID
    //+SHOOTABLE
    +NOGRAVITY
    +FLOORCLIP
    
    ActiveSound "parachute/pull"
    
    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 A_ActiveSound
            TNT1 A 0 A_PlayWeaponSound("parachute/unfurl")
            PARA A 0 //ACS_ExecuteAlways(971, 0, 0)
        Chill:
            TNT1 A 0
            PARA A -1
            wait
        Death:
            TNT1 A 0
            TNT1 A 0 A_Gravity
            TNT1 A 0 A_PlayWeaponSound("parachute/flop")
            TNT1 A 0 A_RearrangePointers(AAPTR_NULL, AAPTR_NULL, AAPTR_DEFAULT) //Clear the player as our master
            PARA B 4
            PARA C 3
            PARA D 400
            stop
    
    }

}


//Only the regular Inventory class works with UNDROPPABLE for some reason.
//"Inventory" is required for an item to stay after death. Dunno why...
actor HealthBooster1 : Inventory 10304
{
    //Green Soulsphere: Translation "192:207=112:127", "240:247=%[0.00,0.00,0.00]:[2.00,2.00,2.00]"
    //Red Soulsphere:
    Translation "192:207=168:191", "240:247=5:8"
    Inventory.MaxAmount 1
    +INVENTORY.FANCYPICKUPSOUND
    Inventory.PickupMessage "You picked up an enchanted orb! Your max health is now permanently boosted."
    //-INVENTORY.AUTOACTIVATE
    +INVENTORY.UNDROPPABLE
    //Armor.MaxSaveAmount 20
    -INVENTORY.INVBAR
	-COUNTITEM

    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 0 Thing_SetSpecial(0, 226, 900, 0, 0)
        Idle:
            SOUL ABCDCB 6 Bright
            loop
    }
}

actor HealthBooster2 : HealthBooster1 10305
{
}
actor HealthBooster3 : HealthBooster1 10306
{
}

actor DoomZRadSuit : RadSuit replaces RadSuit 10307
{
    Tag "Radiation Suit"
    //+NONINTERACTIVE
    //+NOBLOCKMAP
    -SOLID
    +SHOOTABLE
    -NOGRAVITY
    +FLOORCLIP
    -INVENTORY.AUTOACTIVATE
    Inventory.Icon "SUITI"
  +INVENTORY.INVBAR
  +INVENTORY.FANCYPICKUPSOUND

    Health 100
    Inventory.MaxAmount 10
    
  States
  {
  Spawn:
    SUIT A -1 Bright
    Stop
  }
}


Actor Cotton : Inventory
{
    Tag "Cotton"
    +SHOOTABLE
    +NOBLOOD
    +CANPASS
    +WINDTHRUST
    Health 10

    Scale 0.5
    
    Inventory.PickupMessage "You picked up cotton!"
    Inventory.Amount 1
    Inventory.MaxAmount 30
    Inventory.Icon "CTTNI"
    +INVENTORY.INVBAR
    +INVENTORY.PICKUPFLASH
        
    States
    {
    Spawn:
        TNT1 A 0
        CTTN A 52500 // 25 minutes
        Stop
    }
}


actor SparkEmitter 10310
{
    +NOBLOCKMAP
    +NOGRAVITY
    +CLIENTSIDEONLY

    States
    {
        Spawn:
            TNT1 A 0
            TNT1 A 4 A_SpawnItemEx("SparkEmitterSpark", 0, 0, 0, 0, 0, 0, 0, SXF_CLIENTSIDE)
            loop
    }
}
actor SparkEmitterSpark
{
    +WINDTHRUST
    +CLIENTSIDEONLY
    //+NOGRAVITY
    //+NOBLOCKMAP
    
    Scale 0.25

        States
    {
        Spawn:
            ZP01 A 0
            ZP01 ABCBABCBABCB 5 Bright
            ZP01 A 0 A_Jump(100, "Death")
            Loop
        Death:
            ZP01 A 0
            ZP01 DEF 5 Bright  A_SpawnItemEx("ElectroTrail",0,0,0,1,0,random(-1,1),random(1,360), SXF_CLIENTSIDE)
            stop
    }
}

//10308 is TornadoJet - See actors/misc/tornadojet.txt

//11500-11599 is for quests
